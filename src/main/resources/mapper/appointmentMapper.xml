<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hospital.mapper.AppointmentMapper">  <!-- namespace 속성에 AppointmentMapper 인터페이스 경로 지정 -->

    <!-- AppointmentMapper 인터페이스 메소드에 매핑될 SQL 쿼리 작성 -->

    <!-- 진료 예약 등록 (insertAppointment 메소드 매핑) -->
    <insert id="insertAppointment" parameterType="hospital.dto.AppointmentDto">
        INSERT INTO appointment (patientid, doctorid, appointmentdate, appointmenttime, status)
        VALUES (#{patientid}, #{doctorid}, #{appointmentdate}, #{appointmenttime}, #{status})
    </insert>

    <!-- 전체 진료 예약 목록 조회 (selectAllAppointments 메소드 매핑) -->
    <select id="selectAllAppointments" resultType="hospital.dto.AppointmentDto">
        SELECT appointmentid, patientid, doctorid, appointmentdate, appointmenttime, status, createdat
        FROM appointment
        ORDER BY appointmentdate DESC, appointmenttime ASC  <!-- 예약 날짜, 시간 순으로 조회 -->
    </select>

    <!-- 특정 진료 예약 상세 조회 (ID로 조회) (selectAppointmentById 메소드 매핑) -->
    <select id="selectAppointmentById" parameterType="int" resultType="hospital.dto.AppointmentDto">
        SELECT appointmentid, patientid, doctorid, appointmentdate, appointmenttime, status, createdat
        FROM appointment
        WHERE appointmentid = #{appointmentid}
    </select>

    <!-- 특정 날짜의 진료 예약 목록 조회 (selectAppointmentsByDate 메소드 매핑) -->
    <select id="selectAppointmentsByDate" parameterType="java.time.LocalDate" resultType="hospital.dto.AppointmentDto">
        SELECT appointmentid, patientid, doctorid, appointmentdate, appointmenttime, status, createdat
        FROM appointment
        WHERE appointmentdate = #{appointmentDate}
        ORDER BY appointmenttime ASC  <!-- 예약 시간 순으로 조회 -->
    </select>

    <!-- 환자별 진료 예약 목록 조회 (selectAppointmentsByPatientId 메소드 매핑) -->
    <select id="selectAppointmentsByPatientId" parameterType="int" resultType="hospital.dto.AppointmentDto">
        SELECT appointmentid, patientid, doctorid, appointmentdate, appointmenttime, status, createdat
        FROM appointment
        WHERE patientid = #{patientid}
        ORDER BY appointmentdate DESC, appointmenttime ASC  <!-- 예약 날짜, 시간 순으로 조회 -->
    </select>

    <!-- 의사별 진료 예약 목록 조회 (selectAppointmentsByDoctorId 메소드 매핑) -->
    <select id="selectAppointmentsByDoctorId" parameterType="int" resultType="hospital.dto.AppointmentDto">
        SELECT appointmentid, patientid, doctorid, appointmentdate, appointmenttime, status, createdat
        FROM appointment
        WHERE doctorid = #{doctorid}
        ORDER BY appointmentdate DESC, appointmenttime ASC  <!-- 예약 날짜, 시간 순으로 조회 -->
    </select>

    <!-- 진료 예약 수정 (updateAppointment 메소드 매핑) -->
    <update id="updateAppointment" parameterType="hospital.dto.AppointmentDto">
        UPDATE appointment
        SET patientid = #{patientid},
            doctorid = #{doctorid},
            appointmentdate = #{appointmentdate},
            appointmenttime = #{appointmenttime},
            status = #{status}
        WHERE appointmentid = #{appointmentid}
    </update>

    <!-- 진료 예약 취소 (ID로 삭제) (deleteAppointmentById 메소드 매핑) -->
    <delete id="deleteAppointmentById" parameterType="int">
        DELETE FROM appointment
        WHERE appointmentid = #{appointmentid}
    </delete>

</mapper>